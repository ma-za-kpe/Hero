import static spark.Spark.staticFileLocation;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {
        staticFileLocation("/public");
        String layout = "templates/layout.vtl";

        get("/", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/index.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //get: show new post form

        //post: process new post form
//        post("/posts/new", (request, response) -> { //URL to make new post on POST route
//            Map<String, Object> model = new HashMap<>();
//
//            String content = request.queryParams("content");
//            Post newPost = new Post(content);
//            model.put("post", newPost);
//            return new ModelAndView(model, "success.hbs");
//        }, new VelocityTemplateEngine());

        //get: show all posts
//        get("/", (req, res) -> {
//            Map<String, Object> model = new HashMap<>();
//            ArrayList<Squad> squads = Squad.getAllSquad();
//            model.put("squads", squads);
//
//            return new ModelAndView(model, "index.vtl");
//        }, new VelocityTemplateEngine());

        //get: show an individual post

        //get: show a form to update a post

        //post: process a form to update a post

        //get: delete an individual post

        //get: delete all posts

    }
}
