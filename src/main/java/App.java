import static spark.Spark.staticFileLocation;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;


/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {

    public static void main(String[] args) {
        staticFileLocation("/public");
        String layout = "templates/layout.vtl";

        ProcessBuilder process = new ProcessBuilder();
        Integer port;
        if (process.environment().get("PORT") != null) {
            port = Integer.parseInt(process.environment().get("PORT"));
        } else {
            port = 4567;
        }

        setPort(port);

        get("/", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            ArrayList<Squad> squads = Squad.getAllSquad();
            ArrayList<Hero> heroes = Hero.getAllHeroes();
            model.put("mySquad", squads);
            model.put("myHero", heroes);

            model.put("template", "templates/index.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //onclick button
        get("/add-form", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/addform.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //get: show new post form

        //post: process new post form
        post("/addform", (request, response) -> { //URL to make new post on POST route
            Map<String, Object> model = new HashMap<>();

            String name = request.queryParams("name");
            String cause = request.queryParams("cause");

            request.session().attribute("name", name);
            request.session().attribute("cause", cause);
            model.put("name", name);
            model.put("cause", cause);

            Squad newSquad = new Squad(name, cause);
            model.put("squads", newSquad);
            model.put("template", "templates/success.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //onclick button add hero
        get("/add-hero-form", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("template", "templates/addHeroform.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //post: process new hero form
        post("/addHeroForm", (request, response) -> { //URL to make new post on POST route
            Map<String, Object> model = new HashMap<>();
            String name = request.queryParams("name");
            String skill = request.queryParams("skill");
            String weakness = request.queryParams("weakness");
            String age = request.queryParams("age");

            request.session().attribute("name", name);
            request.session().attribute("skill", skill);
            request.session().attribute("weakness", weakness);
            request.session().attribute("age", age);
            model.put("name", name);
            model.put("skill", skill);
            model.put("weakness", weakness);
            model.put("age", age);

            Hero newHero = new Hero(name, skill, weakness, Integer.parseInt(age));
            model.put("heroes", newHero);
            model.put("template", "templates/success.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        //get: show an individual post

        //get: show a form to update a post

        //post: process a form to update a post

        //get: delete an individual post

        //get: delete all posts

    }
}
